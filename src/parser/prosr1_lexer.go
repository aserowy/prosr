// Code generated from c:\Users\serow_000\source\repos\prosr\src\parser\Prosr1.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 23, 149,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 3, 2,
	3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5,
	3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18,
	3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 130, 10, 19, 3, 20,
	3, 20, 6, 20, 134, 10, 20, 13, 20, 14, 20, 135, 3, 21, 6, 21, 139, 10,
	21, 13, 21, 14, 21, 140, 3, 22, 6, 22, 144, 10, 22, 13, 22, 14, 22, 145,
	3, 22, 3, 22, 2, 2, 23, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	19, 37, 20, 39, 21, 41, 22, 43, 23, 3, 2, 6, 4, 2, 67, 92, 99, 124, 6,
	2, 50, 59, 67, 92, 97, 97, 99, 124, 3, 2, 50, 59, 5, 2, 11, 12, 15, 15,
	34, 34, 2, 153, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2,
	9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2,
	2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2,
	2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2,
	2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3,
	2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 3, 45, 3, 2, 2, 2, 5, 47,
	3, 2, 2, 2, 7, 54, 3, 2, 2, 2, 9, 56, 3, 2, 2, 2, 11, 58, 3, 2, 2, 2, 13,
	60, 3, 2, 2, 2, 15, 62, 3, 2, 2, 2, 17, 64, 3, 2, 2, 2, 19, 71, 3, 2, 2,
	2, 21, 75, 3, 2, 2, 2, 23, 77, 3, 2, 2, 2, 25, 79, 3, 2, 2, 2, 27, 86,
	3, 2, 2, 2, 29, 94, 3, 2, 2, 2, 31, 98, 3, 2, 2, 2, 33, 105, 3, 2, 2, 2,
	35, 111, 3, 2, 2, 2, 37, 129, 3, 2, 2, 2, 39, 131, 3, 2, 2, 2, 41, 138,
	3, 2, 2, 2, 43, 143, 3, 2, 2, 2, 45, 46, 7, 63, 2, 2, 46, 4, 3, 2, 2, 2,
	47, 48, 7, 114, 2, 2, 48, 49, 7, 116, 2, 2, 49, 50, 7, 113, 2, 2, 50, 51,
	7, 117, 2, 2, 51, 52, 7, 116, 2, 2, 52, 53, 7, 51, 2, 2, 53, 6, 3, 2, 2,
	2, 54, 55, 7, 61, 2, 2, 55, 8, 3, 2, 2, 2, 56, 57, 7, 125, 2, 2, 57, 10,
	3, 2, 2, 2, 58, 59, 7, 127, 2, 2, 59, 12, 3, 2, 2, 2, 60, 61, 7, 42, 2,
	2, 61, 14, 3, 2, 2, 2, 62, 63, 7, 43, 2, 2, 63, 16, 3, 2, 2, 2, 64, 65,
	7, 101, 2, 2, 65, 66, 7, 99, 2, 2, 66, 67, 7, 110, 2, 2, 67, 68, 7, 110,
	2, 2, 68, 69, 7, 103, 2, 2, 69, 70, 7, 116, 2, 2, 70, 18, 3, 2, 2, 2, 71,
	72, 7, 99, 2, 2, 72, 73, 7, 110, 2, 2, 73, 74, 7, 110, 2, 2, 74, 20, 3,
	2, 2, 2, 75, 76, 7, 41, 2, 2, 76, 22, 3, 2, 2, 2, 77, 78, 7, 36, 2, 2,
	78, 24, 3, 2, 2, 2, 79, 80, 7, 117, 2, 2, 80, 81, 7, 123, 2, 2, 81, 82,
	7, 112, 2, 2, 82, 83, 7, 118, 2, 2, 83, 84, 7, 99, 2, 2, 84, 85, 7, 122,
	2, 2, 85, 26, 3, 2, 2, 2, 86, 87, 7, 111, 2, 2, 87, 88, 7, 103, 2, 2, 88,
	89, 7, 117, 2, 2, 89, 90, 7, 117, 2, 2, 90, 91, 7, 99, 2, 2, 91, 92, 7,
	105, 2, 2, 92, 93, 7, 103, 2, 2, 93, 28, 3, 2, 2, 2, 94, 95, 7, 106, 2,
	2, 95, 96, 7, 119, 2, 2, 96, 97, 7, 100, 2, 2, 97, 30, 3, 2, 2, 2, 98,
	99, 7, 99, 2, 2, 99, 100, 7, 101, 2, 2, 100, 101, 7, 118, 2, 2, 101, 102,
	7, 107, 2, 2, 102, 103, 7, 113, 2, 2, 103, 104, 7, 112, 2, 2, 104, 32,
	3, 2, 2, 2, 105, 106, 7, 101, 2, 2, 106, 107, 7, 99, 2, 2, 107, 108, 7,
	110, 2, 2, 108, 109, 7, 110, 2, 2, 109, 110, 7, 117, 2, 2, 110, 34, 3,
	2, 2, 2, 111, 112, 7, 113, 2, 2, 112, 113, 7, 112, 2, 2, 113, 36, 3, 2,
	2, 2, 114, 115, 7, 117, 2, 2, 115, 116, 7, 118, 2, 2, 116, 117, 7, 116,
	2, 2, 117, 118, 7, 107, 2, 2, 118, 119, 7, 112, 2, 2, 119, 130, 7, 105,
	2, 2, 120, 121, 7, 100, 2, 2, 121, 122, 7, 113, 2, 2, 122, 123, 7, 113,
	2, 2, 123, 130, 7, 110, 2, 2, 124, 125, 7, 107, 2, 2, 125, 126, 7, 112,
	2, 2, 126, 127, 7, 118, 2, 2, 127, 128, 7, 53, 2, 2, 128, 130, 7, 52, 2,
	2, 129, 114, 3, 2, 2, 2, 129, 120, 3, 2, 2, 2, 129, 124, 3, 2, 2, 2, 130,
	38, 3, 2, 2, 2, 131, 133, 9, 2, 2, 2, 132, 134, 9, 3, 2, 2, 133, 132, 3,
	2, 2, 2, 134, 135, 3, 2, 2, 2, 135, 133, 3, 2, 2, 2, 135, 136, 3, 2, 2,
	2, 136, 40, 3, 2, 2, 2, 137, 139, 9, 4, 2, 2, 138, 137, 3, 2, 2, 2, 139,
	140, 3, 2, 2, 2, 140, 138, 3, 2, 2, 2, 140, 141, 3, 2, 2, 2, 141, 42, 3,
	2, 2, 2, 142, 144, 9, 5, 2, 2, 143, 142, 3, 2, 2, 2, 144, 145, 3, 2, 2,
	2, 145, 143, 3, 2, 2, 2, 145, 146, 3, 2, 2, 2, 146, 147, 3, 2, 2, 2, 147,
	148, 8, 22, 2, 2, 148, 44, 3, 2, 2, 2, 8, 2, 129, 133, 135, 140, 145, 3,
	8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "'prosr1'", "';'", "'{'", "'}'", "'('", "')'", "'caller'", "'all'",
	"'''", "'\"'", "'syntax'", "'message'", "'hub'", "'action'", "'calls'",
	"'on'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "SYNTAX", "MESSAGE", "HUB",
	"ACTION", "CALLS", "ON", "TYPE", "IDENT", "NUMBER", "WHITESPACE",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "SYNTAX", "MESSAGE", "HUB", "ACTION", "CALLS", "ON", "TYPE",
	"IDENT", "NUMBER", "WHITESPACE",
}

type Prosr1Lexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewProsr1Lexer(input antlr.CharStream) *Prosr1Lexer {

	l := new(Prosr1Lexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Prosr1.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// Prosr1Lexer tokens.
const (
	Prosr1LexerT__0       = 1
	Prosr1LexerT__1       = 2
	Prosr1LexerT__2       = 3
	Prosr1LexerT__3       = 4
	Prosr1LexerT__4       = 5
	Prosr1LexerT__5       = 6
	Prosr1LexerT__6       = 7
	Prosr1LexerT__7       = 8
	Prosr1LexerT__8       = 9
	Prosr1LexerT__9       = 10
	Prosr1LexerT__10      = 11
	Prosr1LexerSYNTAX     = 12
	Prosr1LexerMESSAGE    = 13
	Prosr1LexerHUB        = 14
	Prosr1LexerACTION     = 15
	Prosr1LexerCALLS      = 16
	Prosr1LexerON         = 17
	Prosr1LexerTYPE       = 18
	Prosr1LexerIDENT      = 19
	Prosr1LexerNUMBER     = 20
	Prosr1LexerWHITESPACE = 21
)
